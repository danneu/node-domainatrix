// Generated by CoffeeScript 1.3.1
var Url;

String.prototype.reverse = function(delimiter) {
  if (delimiter == null) {
    delimiter = "";
  }
  return this.split(delimiter).reverse().join(delimiter);
};

Url = (function() {

  Url.name = 'Url';

  function Url(keys) {
    var key, valid_keys, _i, _len;
    if (keys == null) {
      keys = {};
    }
    valid_keys = ["auth", "host", "hostname", "href", "path", "pathname", "port", "protocol", "query", "search", "domain", "publicSuffix", "subdomain"];
    for (_i = 0, _len = valid_keys.length; _i < _len; _i++) {
      key = valid_keys[_i];
      this[key] = keys[key] || "";
    }
    this.canonical = this.buildCanonical();
  }

  Url.prototype.buildCanonical = function() {
    var canonical, set, sets;
    sets = [this.publicSuffix, this.domain, this.subdomain];
    canonical = ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = sets.length; _i < _len; _i++) {
        set = sets[_i];
        if (set !== "") {
          _results.push(set.reverse("."));
        }
      }
      return _results;
    })()).join(".");
    if (this.path !== "/") {
      canonical += this.path;
    }
    return canonical;
  };

  Url.prototype.domain_with_public_suffix = function() {
    var part;
    return ((function() {
      var _i, _len, _ref, _results;
      _ref = [this.domain, this.public_suffix];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        part = _ref[_i];
        if (part !== "") {
          _results.push(part);
        }
      }
      return _results;
    }).call(this)).join(".");
  };

  return Url;

})();

module.exports = Url;
